Metadata-Version: 1.1
Name: JediML
Version: 0.4.1
Summary: Demo machine learning algorithm suite
Home-page: https://github.com/pangjac/JediMLSuite
Author: Hsuan-Tien Lin, Jacqueline Pang
Author-email: jp2338@cornell.edu
License: MIT
Description: `JediML`_
        =========
        
        .. image:: https://img.shields.io/badge/made%20with-%e2%9d%a4-ff69b4.svg
            :target: https://github.com/pangjac
        
        - A simple machine learning algorithm suite, inspired by Professor Hsuan-Tien Lin, National Taiwan University, machine learning foundation technique `course <https://www.youtube.com/user/hsuantien/playlists>`_.
        - The suite aims to help beginners to understand foundational machine learning algorithm, including Perceptron, Regression, Support Vector Machine, Decision Tree etc.
        
        
        Installation
        ============
        
        .. code-block:: bash
        
            $ pip install JediML
        
            - Note : The suite is still under development. Please check back if error occurs. Will fix it as soon as possible!
        
        Algorithm
        ============
        
        - Perceptron Learning
            - Perceptron Learning Algorithm Binary/Multi Classification 
            - Pocket Perceptron Learning Algorithm Binary/Multi Classification 
        - Regression
            - Linear Regression Learning 
            - Ridge Regression Learning 
            - Kernel Ridge Regression Learning
        - Logistic Regression
            - Logistic Regression Learning
            - L2 Regularized Logistic Regression Learning
            - Kernel Logistic Regression Learning
        - Support Vector Machine
            - Hard Margin SVM
            - Polynomial/ Soft Polynomial Kernel SVM
            - Gaussian / Soft Gaussian Kernel SVM
            - Probabilistic SVM
            - Least Squares SVM
            - Support Vector Regression SVM
        - Decision Tree
            - Decision Stump Based
            - AdaBoost Stump Based
            - AdaBoost Decision Tree
            - Gradient Boost Decision Tree
            - Decision Tree Classification/Regression
            - Random Forest Classification/Regression
        - Neural Network
            - Neural Network Binary Classification
        - Accelerator
            - Linear Regression Accelerator
        - Feature Transform
            - Polynomial Feature/Legendre Feature Transform
        - Validation
            - N Fold Cross Validation
        - Blending
            - Uniform Blending for Classification/Regression
            - Linear Blending for Classification/Regression
        
        Usage
        ============
        
        .. code-block:: py
        
            >>> import numpy as np
            >>> import JediML.PLA as pla
        
            >>> your_input_data_file = '/path/to/your/data/file'
            # Suite also provide sample data from Professor Hsuan-Tien Lin course material
        
            >>> pla_bc = pla.BinaryClassifier()
            >>> pla_bc.load_train_data(your_input_data_file)
            >>> pla_bc.set_param()
            >>> pla_bc.init_W()
            >>> W = pla_bc.train()
        
            >>> test_data = 'Format : Each feature of data x separated with spaces, and the ground truth y at the end of line.'
            # assign test data, format like this '0.97681 0.10723 0.64385 ........ 0.29556 1'
        
            >>> prediction = pla_bc.prediction(test_data)
        
            >>> print prediction['input_data_x']
            >>> print prediction['input_data_y']
            >>> print prediction['prediction']
        
        
        PEP8
        =========
        
        .. code-block:: shell
        
           pep8 JediML/*.py --ignore=E501
        
        License
        =========
        The MIT License (MIT)
        
Keywords: Machine Learning,Perceptron Learning Algorithm,PLA,Pocket Perceptron Learning Algorithm,Pocket PLA,Linear Regression,Logistic Regression,Ridge Regression,Binay Classifier,Multi Classifier,SVM,Support Vector Machine,Decision Tree,AdaBoost
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Topic :: Education
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
